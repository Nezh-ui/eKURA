from rest_framework.authtoken.models import Token
from rest_framework import serializers
from .models import Voter
from django.contrib.auth import get_user_model

user = get_user_model()
class VoterRegistrationSerializer(serializers.ModelSerializer):
    email = serializers.EmailField()
    Password = serializers.CharField(max_length=100)
    ID = serializers.CharField(max_length=100)

    def create(self, validated_data):
        voter = get_user_model().objects.create_user(
            username=validated_data['email'],
            email=validated_data['email'],
            password=validated_data['Password'],
            ID=validated_data['ID']
        )
        Token.objects.create(user=voter)
        return Voter.objects.create(user=voter, ID=validated_data['ID'])

class VoterLoginSerializer(serializers.Serializer):
    ID = serializers.CharField(max_length=100)
    Password = serializers.CharField(max_length=100)

    def validate(self, attrs):
        ID = attrs.get('ID')
        if not ID:      
            raise serializers.ValidationError("All fields are required.")
        return attrs

class VoterSerializer(serializers.ModelSerializer):
    ID = serializers.StringRelatedField(source='ID')
    class Meta:
        model = Voter
        fields = ['name', 'email', 'age', 'ID', 'location', 'voted']
        read_only_fields = ['voted']